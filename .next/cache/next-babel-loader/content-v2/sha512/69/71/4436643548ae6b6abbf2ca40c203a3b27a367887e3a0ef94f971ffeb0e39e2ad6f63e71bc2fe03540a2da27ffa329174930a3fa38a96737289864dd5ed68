{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oludcie/WebstormProjects/sapient/new/next-apollo-demo-final/sapient-client-typescript/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport QUERY_NAMES from './NamesQuery.graphql';\n\nvar Home = function Home() {\n  _s();\n\n  var _useQuery = useQuery(QUERY_NAMES),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useState = useState([data]),\n      names = _useState[0],\n      setNames = _useState[1];\n\n  useEffect(function () {\n    if (data) {\n      setNames(data);\n    }\n  }, []); // make sure all data is loaded\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ui container center header\",\n      style: {\n        textAlign: 'center',\n        margin: '20px'\n      },\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, _this);\n  } // check for errors\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \":( an error happened\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, _this);\n  } // if all good return data\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"WklOHegPJsdmUGS0X3otBxzEOxg=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/oludcie/WebstormProjects/sapient/new/next-apollo-demo-final/sapient-client-typescript/pages/index.tsx"],"names":["React","useState","useEffect","useQuery","QUERY_NAMES","Home","data","loading","error","names","setNames","textAlign","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,OAAOC,WAAP,MAAwB,sBAAxB;;AAOA,IAAMC,IAAsB,GAAG,SAAzBA,IAAyB,GAAM;AAAA;;AAAA,kBAEFF,QAAQ,CAACC,WAAD,CAFN;AAAA,MAE3BE,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,OAFqB,aAErBA,OAFqB;AAAA,MAEZC,KAFY,aAEZA,KAFY;;AAAA,kBAITP,QAAQ,CAAC,CAACK,IAAD,CAAD,CAJC;AAAA,MAI5BG,KAJ4B;AAAA,MAIrBC,QAJqB;;AAMnCR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGI,IAAH,EAAS;AACPI,MAAAA,QAAQ,CAACJ,IAAD,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT,CANmC,CAanC;;AACA,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAG,MAAA,SAAS,EAAC,4BAAb;AAA0C,MAAA,KAAK,EAAE;AAACI,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAhBkC,CAmBnC;;;AACA,MAAIJ,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAtBkC,CAwBnC;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA9BD;;GAAMH,I;UAE6BF,Q;;;KAF7BE,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Head from 'next/head';\nimport { useQuery } from '@apollo/client';\nimport Users from './users';\n\nimport QUERY_NAMES from './NamesQuery.graphql';\n\ninterface Props {\n\n}\n\n\nconst Home: React.FC <Props> = () => {\n\n  const { data, loading, error } = useQuery(QUERY_NAMES);\n\n  const [names, setNames] = useState([data])\n\n  useEffect(() => {\n    if(data) {\n      setNames(data)\n    }\n  }, [])\n \n\n  // make sure all data is loaded\n  if (loading) {\n    return <p className=\"ui container center header\" style={{textAlign: 'center', margin: '20px'}}>loading...</p>;\n  }\n\n\n  // check for errors\n  if (error) {\n    return <p>:( an error happened</p>;\n  }\n\n  // if all good return data\n  return (\n    <div className=\"ui container\">\n  \n    </div>\n  );\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}